import Gaffer
import GafferDispatch
import GafferImage
import GafferML
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 5, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 8, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "renderPass", Gaffer.StringPlug( "value", defaultValue = '', ), "renderPass", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["openColorIO1"] = GafferImage.OpenColorIOConfigPlug( "openColorIO1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO1"] )
__children["defaultFormat1"] = GafferImage.FormatPlug( "defaultFormat1", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat1"] )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageToTensor"] = GafferML.ImageToTensor( "ImageToTensor" )
parent.addChild( __children["ImageToTensor"] )
__children["ImageToTensor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Inference16"] = GafferML.Inference( "Inference16" )
parent.addChild( __children["Inference16"] )
__children["Inference16"]["in"].resize( 1 )
__children["Inference16"]["out"].resize( 1 )
__children["Inference16"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TensorToImage"] = GafferML.TensorToImage( "TensorToImage" )
parent.addChild( __children["TensorToImage"] )
__children["TensorToImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop1"] = GafferImage.Crop( "Crop1" )
parent.addChild( __children["Crop1"] )
__children["Crop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContactSheet2"] = GafferImage.ContactSheet( "ContactSheet2" )
parent.addChild( __children["ContactSheet2"] )
__children["ContactSheet2"]["in"].resize( 2 )
__children["ContactSheet2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop2"] = GafferImage.Crop( "Crop2" )
parent.addChild( __children["Crop2"] )
__children["Crop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Resize7"] = GafferImage.Resize( "Resize7" )
parent.addChild( __children["Resize7"] )
__children["Resize7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop3"] = GafferImage.Crop( "Crop3" )
parent.addChild( __children["Crop3"] )
__children["Crop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LocalDispatcher"] = GafferDispatch.LocalDispatcher( "LocalDispatcher" )
parent.addChild( __children["LocalDispatcher"] )
__children["LocalDispatcher"]["tasks"].resize( 2 )
__children["LocalDispatcher"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader3"] = GafferImage.ImageReader( "ImageReader3" )
parent.addChild( __children["ImageReader3"] )
__children["ImageReader3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter3"] = GafferImage.ImageWriter( "ImageWriter3" )
parent.addChild( __children["ImageWriter3"] )
__children["ImageWriter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LocalDispatcher3"] = GafferDispatch.LocalDispatcher( "LocalDispatcher3" )
parent.addChild( __children["LocalDispatcher3"] )
__children["LocalDispatcher3"]["tasks"].resize( 2 )
__children["LocalDispatcher3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["end"].setValue( 121 )
parent["frame"].setValue( 7.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 50251 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["renderPass"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["renderPass"]["value"], 'plugValueWidget:type', 'GafferSceneUI.RenderPassEditor._RenderPassPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ImageReader"], 'annotation:user:text', 'load pre-tiled image from tile_v3.ps1' )
Gaffer.Metadata.registerValue( __children["ImageReader"], 'annotation:user:color', imath.Color3f( 0.75, 0, 0 ) )
__children["ImageReader"]["fileName"].setValue( 'C:/onedrive/main_projects/scenes/gaffer/ml/img/tiledTest/tile##.png' )
__children["ImageReader"]["colorSpace"].setValue( 'sRGB neutral' )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( -152.895218, 12.6225615 ) )
__children["ImageToTensor"]["image"].setInput( __children["ImageReader"]["out"] )
__children["ImageToTensor"]["__uiPosition"].setValue( imath.V2f( -152.895218, 0.421791077 ) )
Gaffer.Metadata.registerValue( __children["Inference16"], 'annotation:user:text', 'load the onnx model' )
Gaffer.Metadata.registerValue( __children["Inference16"], 'annotation:user:color', imath.Color3f( 0.75, 0, 0 ) )
__children["Inference16"]["model"].setValue( 'C:/Source/lib/onnxruntime-win-x64-1.20.1/models/4xNomos2_hq_dat2_fp32.onnx' )
__children["Inference16"]["in"][0].setInput( __children["ImageToTensor"]["tensor"] )
Gaffer.Metadata.registerValue( __children["Inference16"]["in"][0], 'label', 'images' )
Gaffer.Metadata.registerValue( __children["Inference16"]["in"][0], 'noduleLayout:label', 'images' )
Gaffer.Metadata.registerValue( __children["Inference16"]["out"][0], 'label', 'output' )
Gaffer.Metadata.registerValue( __children["Inference16"]["out"][0], 'noduleLayout:label', 'output' )
__children["Inference16"]["__uiPosition"].setValue( imath.V2f( -152.895218, -12.431572 ) )
__children["TensorToImage"]["tensor"].setInput( __children["Inference16"]["out"][0] )
__children["TensorToImage"]["__uiPosition"].setValue( imath.V2f( -152.895218, -24.4072571 ) )
__children["Crop1"]["in"].setInput( __children["ImageReader3"]["out"] )
__children["Crop1"]["area"].setValue( imath.Box2i( imath.V2i( 4, 4 ), imath.V2i( 764, 428 ) ) )
__children["Crop1"]["__uiPosition"].setValue( imath.V2f( -70.3838959, -17.6338959 ) )
__children["ContactSheet2"]["in"][0].setInput( __children["Crop1"]["out"] )
__children["ContactSheet2"]["out"].setInput( __children["ContactSheet2"]["BoxOut"]["__out"] )
__children["ContactSheet2"]["format"].setValue( GafferImage.Format( 8360, 4664, 1.000 ) )
Gaffer.Metadata.registerValue( __children["ContactSheet2"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["ContactSheet2"]["mode"].setValue( 1 )
__children["ContactSheet2"]["frames"].setValue( '1-121' )
__children["ContactSheet2"]["outDivisions"].setInput( __children["ContactSheet2"]["Divisions"]["out"] )
__children["ContactSheet2"]["spacing"]["y"].setInput( __children["ContactSheet2"]["spacing"]["x"] )
__children["ContactSheet2"]["marginTop"].setInput( __children["ContactSheet2"]["spacing"]["y"] )
__children["ContactSheet2"]["marginBottom"].setInput( __children["ContactSheet2"]["spacing"]["y"] )
__children["ContactSheet2"]["marginLeft"].setInput( __children["ContactSheet2"]["spacing"]["x"] )
__children["ContactSheet2"]["marginRight"].setInput( __children["ContactSheet2"]["spacing"]["x"] )
__children["ContactSheet2"]["__uiPosition"].setValue( imath.V2f( -70.8514481, -28.9013596 ) )
__children["Crop2"]["in"].setInput( __children["ContactSheet2"]["out"] )
__children["Crop2"]["area"].setValue( imath.Box2i( imath.V2i( 0, 355 ), imath.V2i( 7670, 4664 ) ) )
__children["Crop2"]["__uiPosition"].setValue( imath.V2f( -70.8514481, -37.0654221 ) )
__children["Resize7"]["in"].setInput( __children["Crop2"]["out"] )
__children["Resize7"]["format"].setValue( GafferImage.Format( 7680, 4320, 1.000 ) )
Gaffer.Metadata.registerValue( __children["Resize7"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Resize7"]["fitMode"].setValue( 1 )
__children["Resize7"]["__uiPosition"].setValue( imath.V2f( -71.1968155, -44.9573593 ) )
__children["Crop3"]["in"].setInput( __children["Resize7"]["out"] )
__children["Crop3"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 7680, 4320 ) ) )
__children["Crop3"]["__uiPosition"].setValue( imath.V2f( -70.4464569, -53.1214294 ) )
Gaffer.Metadata.registerValue( __children["Backdrop"], 'nodeGadget:color', imath.Color3f( 0.519999981, 0.517217994, 0.24179998 ) )
__children["Backdrop"]["title"].setValue( 'Upscale Tiles' )
__children["Backdrop"]["scale"].setValue( 2.0 )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -158.759674, -53.6364975 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.8046494, -5.62084198 ), imath.V2f( 38.7324982, 86.145195 ) ) )
__children["ImageWriter"]["in"].setInput( __children["TensorToImage"]["out"] )
__children["ImageWriter"]["fileName"].setValue( 'C:/onedrive/main_projects/scenes/gaffer/ml/img/tiledFinal/tile##.png' )
__children["ImageWriter"]["colorSpace"].setValue( 'sRGB neutral' )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( -154.395218, -36.4261398 ) )
__children["LocalDispatcher"]["tasks"][0].setInput( __children["ImageWriter"]["task"] )
__children["LocalDispatcher"]["framesMode"].setValue( 1 )
__children["LocalDispatcher"]["frameRange"].setValue( '23-121' )
__children["LocalDispatcher"]["jobName"].setValue( '${script:name}' )
__children["LocalDispatcher"]["jobsDirectory"].setValue( '${project:rootDirectory}/dispatcher/local' )
__children["LocalDispatcher"]["executeInBackground"].setValue( True )
__children["LocalDispatcher"]["__uiPosition"].setValue( imath.V2f( -154.395218, -44.5902023 ) )
Gaffer.Metadata.registerValue( __children["ImageReader3"], 'annotation:user:text', 'load upscaled tiles' )
Gaffer.Metadata.registerValue( __children["ImageReader3"], 'annotation:user:color', imath.Color3f( 0.75, 0, 0 ) )
__children["ImageReader3"]["fileName"].setValue( 'C:/onedrive/main_projects/scenes/gaffer/ml/img/tiledFinal/tile##.png' )
__children["ImageReader3"]["refreshCount"].setValue( 1 )
__children["ImageReader3"]["colorSpace"].setValue( 'sRGB neutral' )
__children["ImageReader3"]["__uiPosition"].setValue( imath.V2f( -70.3838959, -6.73270607 ) )
__children["ImageWriter3"]["in"].setInput( __children["Crop3"]["out"] )
__children["ImageWriter3"]["fileName"].setValue( 'C:/onedrive/main_projects/scenes/gaffer/ml/img/upscale_v3.png' )
__children["ImageWriter3"]["colorSpace"].setValue( 'sRGB neutral' )
__children["ImageWriter3"]["__uiPosition"].setValue( imath.V2f( -70.4464569, -64.9467926 ) )
__children["LocalDispatcher3"]["tasks"][0].setInput( __children["ImageWriter3"]["task"] )
__children["LocalDispatcher3"]["jobName"].setValue( '${script:name}' )
__children["LocalDispatcher3"]["jobsDirectory"].setValue( '${project:rootDirectory}/dispatcher/local' )
__children["LocalDispatcher3"]["executeInBackground"].setValue( True )
__children["LocalDispatcher3"]["__uiPosition"].setValue( imath.V2f( -69.7457581, -73.1108704 ) )
Gaffer.Metadata.registerValue( __children["Backdrop1"], 'nodeGadget:color', imath.Color3f( 0.297963381, 0.589999974, 0.29794997 ) )
__children["Backdrop1"]["title"].setValue( 'Assemble Tiles' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -95.7302017, 0.458782196 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -84.1631622 ), imath.V2f( 59.4923058, 10 ) ) )


del __children
